["\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nfloat u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec4 u_xlat6;\nmediump vec3 u_xlat16_6;\nvec4 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec2 u_xlat8;\nmediump vec4 u_xlat16_8;\nvec2 u_xlat9;\nmediump vec2 u_xlat16_9;\nvec2 u_xlat10;\nfloat u_xlat11;\nfloat u_xlat12;\nvec2 u_xlat21;\nbool u_xlatb21;\nvec2 u_xlat22;\nmediump vec2 u_xlat16_22;\nvec2 u_xlat25;\nvec2 u_xlat26;\nvec2 u_xlat27;\nvec2 u_xlat28;\nfloat u_xlat30;\nfloat u_xlat31;\nfloat u_xlat32;\nfloat u_xlat34;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0 = float(0);\n    u_xlatb0 = u_xlat0>=in_TEXCOORD0.w;\n    u_xlat0 = (u_xlatb0) ? 1.0 : 0.0;\n    u_xlat1 = in_POSITION0.zwxy;\n    u_xlat2.x = u_xlat1.z + _VertexOffsetX;\n    u_xlat12 = u_xlat1.w + _VertexOffsetY;\n    u_xlat2.x = u_xlat2.x;\n    u_xlat2.y = u_xlat12;\n    u_xlat2.z = u_xlat1.x;\n    u_xlat2.xyz = u_xlat2.xyz;\n    u_xlat3 = u_xlat2.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[0];\n    u_xlat4 = u_xlat2.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat2.zzzz * hlslcc_mtx4x4unity_ObjectToWorld[2];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = hlslcc_mtx4x4unity_ObjectToWorld[3] * vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat3.xxxx * hlslcc_mtx4x4unity_MatrixVP[0];\n    u_xlat5 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat5 = u_xlat3.zzzz * hlslcc_mtx4x4unity_MatrixVP[2];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat3 = u_xlat3.wwww * hlslcc_mtx4x4unity_MatrixVP[3];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3;\n    u_xlat3 = u_xlat3;\n    u_xlat10.xy = u_xlat3.ww;\n    u_xlat21.xy = _ScreenParams.xx * hlslcc_mtx4x4glstate_matrix_projection[0].xy;\n    u_xlat22.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat21.xy = u_xlat21.xy + u_xlat22.xy;\n    u_xlat22.xy = (-u_xlat21.xy);\n    u_xlat21.xy = max(u_xlat21.xy, u_xlat22.xy);\n    u_xlat21.xy = u_xlat21.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat10.xy = u_xlat10.xy / u_xlat21.xy;\n    u_xlat30 = dot(u_xlat10.xy, u_xlat10.xy);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat21.x = (-in_TEXCOORD0.w);\n    u_xlat21.x = max(u_xlat21.x, in_TEXCOORD0.w);\n    u_xlat21.x = u_xlat21.x * _GradientScale;\n    u_xlat31 = float(1);\n    u_xlat31 = u_xlat31 + _Sharpness;\n    u_xlat21.x = u_xlat31 * u_xlat21.x;\n    u_xlat30 = u_xlat30 * u_xlat21.x;\n    u_xlat21.x = float(0);\n    u_xlatb21 = u_xlat21.x==hlslcc_mtx4x4glstate_matrix_projection[3].w;\n    if(u_xlatb21){\n        u_xlat21.x = (-u_xlat30);\n        u_xlat21.x = max(u_xlat30, u_xlat21.x);\n        u_xlat31 = float(1);\n        u_xlat22.x = (-_PerspectiveFilter);\n        u_xlat31 = u_xlat31 + u_xlat22.x;\n        u_xlat21.x = u_xlat31 * u_xlat21.x;\n        u_xlat4.xyz = in_NORMAL0.xyz;\n        u_xlat5.x = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n        u_xlat5.y = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n        u_xlat5.z = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n        u_xlat31 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat31 = inversesqrt(u_xlat31);\n        u_xlat4.xyz = vec3(u_xlat31) * u_xlat5.xyz;\n        u_xlat2.x = u_xlat2.x;\n        u_xlat2.y = u_xlat2.y;\n        u_xlat1.xy = u_xlat1.xy;\n        u_xlat5.xyz = u_xlat2.xxx * hlslcc_mtx4x4unity_ObjectToWorld[0].xyz;\n        u_xlat6.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat6.xyz = u_xlat1.xxx * hlslcc_mtx4x4unity_ObjectToWorld[2].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat1.xyw = u_xlat1.yyy * hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n        u_xlat1.xyw = u_xlat1.xyw + u_xlat5.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat1.xyw = (-u_xlat1.xyw);\n        u_xlat1.xyw = u_xlat1.xyw + _WorldSpaceCameraPos.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat22.x = dot(u_xlat1.xyw, u_xlat1.xyw);\n        u_xlat22.x = inversesqrt(u_xlat22.x);\n        u_xlat1.xyw = u_xlat1.xyw * u_xlat22.xxx;\n        u_xlat1.x = dot(u_xlat4.xyz, u_xlat1.xyw);\n        u_xlat11 = (-u_xlat1.x);\n        u_xlat1.x = max(u_xlat11, u_xlat1.x);\n        u_xlat11 = (-u_xlat21.x);\n        u_xlat11 = u_xlat30 + u_xlat11;\n        u_xlat1.x = u_xlat11 * u_xlat1.x;\n        u_xlat30 = u_xlat1.x + u_xlat21.x;\n    }\n    u_xlat1.x = (-_WeightNormal);\n    u_xlat1.x = u_xlat1.x + _WeightBold;\n    u_xlat0 = u_xlat0 * u_xlat1.x;\n    u_xlat0 = u_xlat0 + _WeightNormal;\n    u_xlat0 = u_xlat0 / 4.0;\n    u_xlat0 = u_xlat0 + _FaceDilate;\n    u_xlat0 = u_xlat0 * _ScaleRatioA;\n    u_xlat0 = u_xlat0 * 0.5;\n    u_xlat1.x = float(1);\n    u_xlat11 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat11 = u_xlat30 * u_xlat11;\n    u_xlat1.x = u_xlat11 + u_xlat1.x;\n    u_xlat1.x = u_xlat30 / u_xlat1.x;\n    u_xlat22.x = (-u_xlat0);\n    u_xlat22.x = u_xlat22.x + 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat32 = -0.5;\n    u_xlat31 = u_xlat32 + u_xlat22.x;\n    u_xlat22.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat22.x = u_xlat22.x * 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat34 = in_COLOR0.w;\n    u_xlat16_4.w = u_xlat34;\n    u_xlat16_4.xyz = in_COLOR0.xyz;\n    u_xlat16_5 = u_xlat16_4 * _FaceColor;\n    u_xlat16_6.xyz = u_xlat16_5.www * u_xlat16_5.xyz;\n    u_xlat16_7 = _OutlineColor;\n    u_xlat32 = u_xlat16_7.w;\n    u_xlat34 = u_xlat16_4.w * u_xlat32;\n    u_xlat16_34 = u_xlat34;\n    u_xlat16_4.xyz = vec3(u_xlat16_34) * u_xlat16_7.xyz;\n    u_xlat6.xyz = u_xlat16_6.xyz;\n    u_xlat6.w = u_xlat16_5.w;\n    u_xlat4.xyz = u_xlat16_4.xyz;\n    u_xlat4.w = u_xlat16_34;\n    u_xlat32 = float(2);\n    u_xlat32 = u_xlat32 * u_xlat22.x;\n    u_xlat32 = min(u_xlat32, 1.0);\n    u_xlat32 = sqrt(u_xlat32);\n    u_xlat5 = (-u_xlat6);\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat4 = vec4(u_xlat32) * u_xlat4;\n    u_xlat4 = u_xlat4 + u_xlat6;\n    u_xlat16_4 = u_xlat4;\n    u_xlat5 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat5 = min(u_xlat5, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat8.xy = (-u_xlat5.xy);\n    u_xlat8.xy = u_xlat2.xy + u_xlat8.xy;\n    u_xlat28.xy = (-u_xlat5.xy);\n    u_xlat28.xy = u_xlat5.zw + u_xlat28.xy;\n    u_xlat27.xy = u_xlat8.xy / u_xlat28.xy;\n    u_xlat3 = u_xlat3;\n    u_xlat16_8.xyz = u_xlat6.xyz;\n    u_xlat16_8.w = u_xlat6.w;\n    u_xlat16_4 = u_xlat16_4;\n    u_xlat7.xy = in_TEXCOORD0.xy;\n    u_xlat7.zw = u_xlat27.xy;\n    u_xlat32 = (-u_xlat22.x);\n    u_xlat11 = u_xlat31 + u_xlat32;\n    u_xlat21.x = u_xlat31 + u_xlat22.x;\n    u_xlat16_1.x = u_xlat1.x;\n    u_xlat16_1.y = u_xlat11;\n    u_xlat16_1.z = u_xlat21.x;\n    u_xlat16_1.w = u_xlat31;\n    u_xlat22.x = max(_MaskSoftnessX, _UIMaskSoftnessX);\n    u_xlat32 = max(_MaskSoftnessY, _UIMaskSoftnessY);\n    u_xlat16_22.x = u_xlat22.x;\n    u_xlat16_22.y = u_xlat32;\n    u_xlat6.xy = vec2(ivec2(2, 2));\n    u_xlat6.xy = u_xlat2.xy * u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.xy);\n    u_xlat6.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.zw);\n    u_xlat5.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat16_9.x = float(0.25);\n    u_xlat16_9.y = float(0.25);\n    u_xlat16_9.xy = u_xlat16_22.xy * u_xlat16_9.xy;\n    u_xlat9.xy = u_xlat16_9.xy;\n    u_xlat6.xy = u_xlat10.xy + u_xlat9.xy;\n    u_xlat25.xy = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_5.xy = u_xlat5.xy;\n    u_xlat16_5.zw = u_xlat25.xy;\n    gl_Position = u_xlat3;\n    vs_COLOR0 = u_xlat16_8;\n    vs_COLOR1 = u_xlat16_4;\n    vs_TEXCOORD0 = u_xlat7;\n    vs_TEXCOORD1 = u_xlat16_1;\n    vs_TEXCOORD2 = u_xlat16_5;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nfloat u_xlat2;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat2 = vs_TEXCOORD1.x;\n    u_xlat0 = u_xlat2 * u_xlat10_0;\n    u_xlat16_0.x = u_xlat0;\n    u_xlat16_1 = (-vs_TEXCOORD1.w);\n    u_xlat16_1 = u_xlat16_0.x + u_xlat16_1;\n    u_xlat16_1 = max(u_xlat16_1, 0.0);\n    u_xlat16_1 = min(u_xlat16_1, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_1) * vs_COLOR0;\n    SV_Target0 = u_xlat16_0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nfloat u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec4 u_xlat6;\nmediump vec3 u_xlat16_6;\nvec4 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec2 u_xlat8;\nmediump vec4 u_xlat16_8;\nvec2 u_xlat9;\nmediump vec2 u_xlat16_9;\nvec2 u_xlat10;\nfloat u_xlat11;\nfloat u_xlat12;\nvec2 u_xlat21;\nbool u_xlatb21;\nvec2 u_xlat22;\nmediump vec2 u_xlat16_22;\nvec2 u_xlat25;\nvec2 u_xlat26;\nvec2 u_xlat27;\nvec2 u_xlat28;\nfloat u_xlat30;\nfloat u_xlat31;\nfloat u_xlat32;\nfloat u_xlat34;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0 = float(0);\n    u_xlatb0 = u_xlat0>=in_TEXCOORD0.w;\n    u_xlat0 = (u_xlatb0) ? 1.0 : 0.0;\n    u_xlat1 = in_POSITION0.zwxy;\n    u_xlat2.x = u_xlat1.z + _VertexOffsetX;\n    u_xlat12 = u_xlat1.w + _VertexOffsetY;\n    u_xlat2.x = u_xlat2.x;\n    u_xlat2.y = u_xlat12;\n    u_xlat2.z = u_xlat1.x;\n    u_xlat2.xyz = u_xlat2.xyz;\n    u_xlat3 = u_xlat2.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[0];\n    u_xlat4 = u_xlat2.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat2.zzzz * hlslcc_mtx4x4unity_ObjectToWorld[2];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = hlslcc_mtx4x4unity_ObjectToWorld[3] * vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat3.xxxx * hlslcc_mtx4x4unity_MatrixVP[0];\n    u_xlat5 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat5 = u_xlat3.zzzz * hlslcc_mtx4x4unity_MatrixVP[2];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat3 = u_xlat3.wwww * hlslcc_mtx4x4unity_MatrixVP[3];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3;\n    u_xlat3 = u_xlat3;\n    u_xlat10.xy = u_xlat3.ww;\n    u_xlat21.xy = _ScreenParams.xx * hlslcc_mtx4x4glstate_matrix_projection[0].xy;\n    u_xlat22.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat21.xy = u_xlat21.xy + u_xlat22.xy;\n    u_xlat22.xy = (-u_xlat21.xy);\n    u_xlat21.xy = max(u_xlat21.xy, u_xlat22.xy);\n    u_xlat21.xy = u_xlat21.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat10.xy = u_xlat10.xy / u_xlat21.xy;\n    u_xlat30 = dot(u_xlat10.xy, u_xlat10.xy);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat21.x = (-in_TEXCOORD0.w);\n    u_xlat21.x = max(u_xlat21.x, in_TEXCOORD0.w);\n    u_xlat21.x = u_xlat21.x * _GradientScale;\n    u_xlat31 = float(1);\n    u_xlat31 = u_xlat31 + _Sharpness;\n    u_xlat21.x = u_xlat31 * u_xlat21.x;\n    u_xlat30 = u_xlat30 * u_xlat21.x;\n    u_xlat21.x = float(0);\n    u_xlatb21 = u_xlat21.x==hlslcc_mtx4x4glstate_matrix_projection[3].w;\n    if(u_xlatb21){\n        u_xlat21.x = (-u_xlat30);\n        u_xlat21.x = max(u_xlat30, u_xlat21.x);\n        u_xlat31 = float(1);\n        u_xlat22.x = (-_PerspectiveFilter);\n        u_xlat31 = u_xlat31 + u_xlat22.x;\n        u_xlat21.x = u_xlat31 * u_xlat21.x;\n        u_xlat4.xyz = in_NORMAL0.xyz;\n        u_xlat5.x = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n        u_xlat5.y = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n        u_xlat5.z = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n        u_xlat31 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat31 = inversesqrt(u_xlat31);\n        u_xlat4.xyz = vec3(u_xlat31) * u_xlat5.xyz;\n        u_xlat2.x = u_xlat2.x;\n        u_xlat2.y = u_xlat2.y;\n        u_xlat1.xy = u_xlat1.xy;\n        u_xlat5.xyz = u_xlat2.xxx * hlslcc_mtx4x4unity_ObjectToWorld[0].xyz;\n        u_xlat6.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat6.xyz = u_xlat1.xxx * hlslcc_mtx4x4unity_ObjectToWorld[2].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat1.xyw = u_xlat1.yyy * hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n        u_xlat1.xyw = u_xlat1.xyw + u_xlat5.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat1.xyw = (-u_xlat1.xyw);\n        u_xlat1.xyw = u_xlat1.xyw + _WorldSpaceCameraPos.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat22.x = dot(u_xlat1.xyw, u_xlat1.xyw);\n        u_xlat22.x = inversesqrt(u_xlat22.x);\n        u_xlat1.xyw = u_xlat1.xyw * u_xlat22.xxx;\n        u_xlat1.x = dot(u_xlat4.xyz, u_xlat1.xyw);\n        u_xlat11 = (-u_xlat1.x);\n        u_xlat1.x = max(u_xlat11, u_xlat1.x);\n        u_xlat11 = (-u_xlat21.x);\n        u_xlat11 = u_xlat30 + u_xlat11;\n        u_xlat1.x = u_xlat11 * u_xlat1.x;\n        u_xlat30 = u_xlat1.x + u_xlat21.x;\n    }\n    u_xlat1.x = (-_WeightNormal);\n    u_xlat1.x = u_xlat1.x + _WeightBold;\n    u_xlat0 = u_xlat0 * u_xlat1.x;\n    u_xlat0 = u_xlat0 + _WeightNormal;\n    u_xlat0 = u_xlat0 / 4.0;\n    u_xlat0 = u_xlat0 + _FaceDilate;\n    u_xlat0 = u_xlat0 * _ScaleRatioA;\n    u_xlat0 = u_xlat0 * 0.5;\n    u_xlat1.x = float(1);\n    u_xlat11 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat11 = u_xlat30 * u_xlat11;\n    u_xlat1.x = u_xlat11 + u_xlat1.x;\n    u_xlat1.x = u_xlat30 / u_xlat1.x;\n    u_xlat22.x = (-u_xlat0);\n    u_xlat22.x = u_xlat22.x + 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat32 = -0.5;\n    u_xlat31 = u_xlat32 + u_xlat22.x;\n    u_xlat22.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat22.x = u_xlat22.x * 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat34 = in_COLOR0.w;\n    u_xlat16_4.w = u_xlat34;\n    u_xlat16_4.xyz = in_COLOR0.xyz;\n    u_xlat16_5 = u_xlat16_4 * _FaceColor;\n    u_xlat16_6.xyz = u_xlat16_5.www * u_xlat16_5.xyz;\n    u_xlat16_7 = _OutlineColor;\n    u_xlat32 = u_xlat16_7.w;\n    u_xlat34 = u_xlat16_4.w * u_xlat32;\n    u_xlat16_34 = u_xlat34;\n    u_xlat16_4.xyz = vec3(u_xlat16_34) * u_xlat16_7.xyz;\n    u_xlat6.xyz = u_xlat16_6.xyz;\n    u_xlat6.w = u_xlat16_5.w;\n    u_xlat4.xyz = u_xlat16_4.xyz;\n    u_xlat4.w = u_xlat16_34;\n    u_xlat32 = float(2);\n    u_xlat32 = u_xlat32 * u_xlat22.x;\n    u_xlat32 = min(u_xlat32, 1.0);\n    u_xlat32 = sqrt(u_xlat32);\n    u_xlat5 = (-u_xlat6);\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat4 = vec4(u_xlat32) * u_xlat4;\n    u_xlat4 = u_xlat4 + u_xlat6;\n    u_xlat16_4 = u_xlat4;\n    u_xlat5 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat5 = min(u_xlat5, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat8.xy = (-u_xlat5.xy);\n    u_xlat8.xy = u_xlat2.xy + u_xlat8.xy;\n    u_xlat28.xy = (-u_xlat5.xy);\n    u_xlat28.xy = u_xlat5.zw + u_xlat28.xy;\n    u_xlat27.xy = u_xlat8.xy / u_xlat28.xy;\n    u_xlat3 = u_xlat3;\n    u_xlat16_8.xyz = u_xlat6.xyz;\n    u_xlat16_8.w = u_xlat6.w;\n    u_xlat16_4 = u_xlat16_4;\n    u_xlat7.xy = in_TEXCOORD0.xy;\n    u_xlat7.zw = u_xlat27.xy;\n    u_xlat32 = (-u_xlat22.x);\n    u_xlat11 = u_xlat31 + u_xlat32;\n    u_xlat21.x = u_xlat31 + u_xlat22.x;\n    u_xlat16_1.x = u_xlat1.x;\n    u_xlat16_1.y = u_xlat11;\n    u_xlat16_1.z = u_xlat21.x;\n    u_xlat16_1.w = u_xlat31;\n    u_xlat22.x = max(_MaskSoftnessX, _UIMaskSoftnessX);\n    u_xlat32 = max(_MaskSoftnessY, _UIMaskSoftnessY);\n    u_xlat16_22.x = u_xlat22.x;\n    u_xlat16_22.y = u_xlat32;\n    u_xlat6.xy = vec2(ivec2(2, 2));\n    u_xlat6.xy = u_xlat2.xy * u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.xy);\n    u_xlat6.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.zw);\n    u_xlat5.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat16_9.x = float(0.25);\n    u_xlat16_9.y = float(0.25);\n    u_xlat16_9.xy = u_xlat16_22.xy * u_xlat16_9.xy;\n    u_xlat9.xy = u_xlat16_9.xy;\n    u_xlat6.xy = u_xlat10.xy + u_xlat9.xy;\n    u_xlat25.xy = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_5.xy = u_xlat5.xy;\n    u_xlat16_5.zw = u_xlat25.xy;\n    gl_Position = u_xlat3;\n    vs_COLOR0 = u_xlat16_8;\n    vs_COLOR1 = u_xlat16_4;\n    vs_TEXCOORD0 = u_xlat7;\n    vs_TEXCOORD1 = u_xlat16_1;\n    vs_TEXCOORD2 = u_xlat16_5;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nfloat u_xlat1;\nmediump float u_xlat16_1;\nint u_xlati2;\nbool u_xlatb2;\nfloat u_xlat3;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat3 = vs_TEXCOORD1.x;\n    u_xlat0 = u_xlat3 * u_xlat10_0;\n    u_xlat16_0.x = u_xlat0;\n    u_xlat16_1 = (-vs_TEXCOORD1.w);\n    u_xlat16_1 = u_xlat16_0.x + u_xlat16_1;\n    u_xlat16_1 = max(u_xlat16_1, 0.0);\n    u_xlat16_1 = min(u_xlat16_1, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_1) * vs_COLOR0;\n    u_xlat16_1 = 0.00100000005;\n    u_xlat16_1 = (-u_xlat16_1);\n    u_xlat16_1 = u_xlat16_0.w + u_xlat16_1;\n    u_xlat1 = u_xlat16_1;\n    u_xlatb2 = u_xlat1<0.0;\n    u_xlati2 = u_xlatb2 ? -1 : int(0);\n    if((u_xlati2)!=0){discard;}\n    SV_Target0 = u_xlat16_0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nfloat u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec4 u_xlat6;\nmediump vec3 u_xlat16_6;\nvec4 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec2 u_xlat8;\nmediump vec4 u_xlat16_8;\nvec2 u_xlat9;\nmediump vec2 u_xlat16_9;\nvec2 u_xlat10;\nfloat u_xlat11;\nfloat u_xlat12;\nvec2 u_xlat21;\nbool u_xlatb21;\nvec2 u_xlat22;\nmediump vec2 u_xlat16_22;\nvec2 u_xlat25;\nvec2 u_xlat26;\nvec2 u_xlat27;\nvec2 u_xlat28;\nfloat u_xlat30;\nfloat u_xlat31;\nfloat u_xlat32;\nfloat u_xlat34;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0 = float(0);\n    u_xlatb0 = u_xlat0>=in_TEXCOORD0.w;\n    u_xlat0 = (u_xlatb0) ? 1.0 : 0.0;\n    u_xlat1 = in_POSITION0.zwxy;\n    u_xlat2.x = u_xlat1.z + _VertexOffsetX;\n    u_xlat12 = u_xlat1.w + _VertexOffsetY;\n    u_xlat2.x = u_xlat2.x;\n    u_xlat2.y = u_xlat12;\n    u_xlat2.z = u_xlat1.x;\n    u_xlat2.xyz = u_xlat2.xyz;\n    u_xlat3 = u_xlat2.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[0];\n    u_xlat4 = u_xlat2.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat2.zzzz * hlslcc_mtx4x4unity_ObjectToWorld[2];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = hlslcc_mtx4x4unity_ObjectToWorld[3] * vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat3.xxxx * hlslcc_mtx4x4unity_MatrixVP[0];\n    u_xlat5 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat5 = u_xlat3.zzzz * hlslcc_mtx4x4unity_MatrixVP[2];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat3 = u_xlat3.wwww * hlslcc_mtx4x4unity_MatrixVP[3];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3;\n    u_xlat3 = u_xlat3;\n    u_xlat10.xy = u_xlat3.ww;\n    u_xlat21.xy = _ScreenParams.xx * hlslcc_mtx4x4glstate_matrix_projection[0].xy;\n    u_xlat22.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat21.xy = u_xlat21.xy + u_xlat22.xy;\n    u_xlat22.xy = (-u_xlat21.xy);\n    u_xlat21.xy = max(u_xlat21.xy, u_xlat22.xy);\n    u_xlat21.xy = u_xlat21.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat10.xy = u_xlat10.xy / u_xlat21.xy;\n    u_xlat30 = dot(u_xlat10.xy, u_xlat10.xy);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat21.x = (-in_TEXCOORD0.w);\n    u_xlat21.x = max(u_xlat21.x, in_TEXCOORD0.w);\n    u_xlat21.x = u_xlat21.x * _GradientScale;\n    u_xlat31 = float(1);\n    u_xlat31 = u_xlat31 + _Sharpness;\n    u_xlat21.x = u_xlat31 * u_xlat21.x;\n    u_xlat30 = u_xlat30 * u_xlat21.x;\n    u_xlat21.x = float(0);\n    u_xlatb21 = u_xlat21.x==hlslcc_mtx4x4glstate_matrix_projection[3].w;\n    if(u_xlatb21){\n        u_xlat21.x = (-u_xlat30);\n        u_xlat21.x = max(u_xlat30, u_xlat21.x);\n        u_xlat31 = float(1);\n        u_xlat22.x = (-_PerspectiveFilter);\n        u_xlat31 = u_xlat31 + u_xlat22.x;\n        u_xlat21.x = u_xlat31 * u_xlat21.x;\n        u_xlat4.xyz = in_NORMAL0.xyz;\n        u_xlat5.x = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n        u_xlat5.y = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n        u_xlat5.z = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n        u_xlat31 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat31 = inversesqrt(u_xlat31);\n        u_xlat4.xyz = vec3(u_xlat31) * u_xlat5.xyz;\n        u_xlat2.x = u_xlat2.x;\n        u_xlat2.y = u_xlat2.y;\n        u_xlat1.xy = u_xlat1.xy;\n        u_xlat5.xyz = u_xlat2.xxx * hlslcc_mtx4x4unity_ObjectToWorld[0].xyz;\n        u_xlat6.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat6.xyz = u_xlat1.xxx * hlslcc_mtx4x4unity_ObjectToWorld[2].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat1.xyw = u_xlat1.yyy * hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n        u_xlat1.xyw = u_xlat1.xyw + u_xlat5.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat1.xyw = (-u_xlat1.xyw);\n        u_xlat1.xyw = u_xlat1.xyw + _WorldSpaceCameraPos.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat22.x = dot(u_xlat1.xyw, u_xlat1.xyw);\n        u_xlat22.x = inversesqrt(u_xlat22.x);\n        u_xlat1.xyw = u_xlat1.xyw * u_xlat22.xxx;\n        u_xlat1.x = dot(u_xlat4.xyz, u_xlat1.xyw);\n        u_xlat11 = (-u_xlat1.x);\n        u_xlat1.x = max(u_xlat11, u_xlat1.x);\n        u_xlat11 = (-u_xlat21.x);\n        u_xlat11 = u_xlat30 + u_xlat11;\n        u_xlat1.x = u_xlat11 * u_xlat1.x;\n        u_xlat30 = u_xlat1.x + u_xlat21.x;\n    }\n    u_xlat1.x = (-_WeightNormal);\n    u_xlat1.x = u_xlat1.x + _WeightBold;\n    u_xlat0 = u_xlat0 * u_xlat1.x;\n    u_xlat0 = u_xlat0 + _WeightNormal;\n    u_xlat0 = u_xlat0 / 4.0;\n    u_xlat0 = u_xlat0 + _FaceDilate;\n    u_xlat0 = u_xlat0 * _ScaleRatioA;\n    u_xlat0 = u_xlat0 * 0.5;\n    u_xlat1.x = float(1);\n    u_xlat11 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat11 = u_xlat30 * u_xlat11;\n    u_xlat1.x = u_xlat11 + u_xlat1.x;\n    u_xlat1.x = u_xlat30 / u_xlat1.x;\n    u_xlat22.x = (-u_xlat0);\n    u_xlat22.x = u_xlat22.x + 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat32 = -0.5;\n    u_xlat31 = u_xlat32 + u_xlat22.x;\n    u_xlat22.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat22.x = u_xlat22.x * 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat34 = in_COLOR0.w;\n    u_xlat16_4.w = u_xlat34;\n    u_xlat16_4.xyz = in_COLOR0.xyz;\n    u_xlat16_5 = u_xlat16_4 * _FaceColor;\n    u_xlat16_6.xyz = u_xlat16_5.www * u_xlat16_5.xyz;\n    u_xlat16_7 = _OutlineColor;\n    u_xlat32 = u_xlat16_7.w;\n    u_xlat34 = u_xlat16_4.w * u_xlat32;\n    u_xlat16_34 = u_xlat34;\n    u_xlat16_4.xyz = vec3(u_xlat16_34) * u_xlat16_7.xyz;\n    u_xlat6.xyz = u_xlat16_6.xyz;\n    u_xlat6.w = u_xlat16_5.w;\n    u_xlat4.xyz = u_xlat16_4.xyz;\n    u_xlat4.w = u_xlat16_34;\n    u_xlat32 = float(2);\n    u_xlat32 = u_xlat32 * u_xlat22.x;\n    u_xlat32 = min(u_xlat32, 1.0);\n    u_xlat32 = sqrt(u_xlat32);\n    u_xlat5 = (-u_xlat6);\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat4 = vec4(u_xlat32) * u_xlat4;\n    u_xlat4 = u_xlat4 + u_xlat6;\n    u_xlat16_4 = u_xlat4;\n    u_xlat5 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat5 = min(u_xlat5, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat8.xy = (-u_xlat5.xy);\n    u_xlat8.xy = u_xlat2.xy + u_xlat8.xy;\n    u_xlat28.xy = (-u_xlat5.xy);\n    u_xlat28.xy = u_xlat5.zw + u_xlat28.xy;\n    u_xlat27.xy = u_xlat8.xy / u_xlat28.xy;\n    u_xlat3 = u_xlat3;\n    u_xlat16_8.xyz = u_xlat6.xyz;\n    u_xlat16_8.w = u_xlat6.w;\n    u_xlat16_4 = u_xlat16_4;\n    u_xlat7.xy = in_TEXCOORD0.xy;\n    u_xlat7.zw = u_xlat27.xy;\n    u_xlat32 = (-u_xlat22.x);\n    u_xlat11 = u_xlat31 + u_xlat32;\n    u_xlat21.x = u_xlat31 + u_xlat22.x;\n    u_xlat16_1.x = u_xlat1.x;\n    u_xlat16_1.y = u_xlat11;\n    u_xlat16_1.z = u_xlat21.x;\n    u_xlat16_1.w = u_xlat31;\n    u_xlat22.x = max(_MaskSoftnessX, _UIMaskSoftnessX);\n    u_xlat32 = max(_MaskSoftnessY, _UIMaskSoftnessY);\n    u_xlat16_22.x = u_xlat22.x;\n    u_xlat16_22.y = u_xlat32;\n    u_xlat6.xy = vec2(ivec2(2, 2));\n    u_xlat6.xy = u_xlat2.xy * u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.xy);\n    u_xlat6.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.zw);\n    u_xlat5.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat16_9.x = float(0.25);\n    u_xlat16_9.y = float(0.25);\n    u_xlat16_9.xy = u_xlat16_22.xy * u_xlat16_9.xy;\n    u_xlat9.xy = u_xlat16_9.xy;\n    u_xlat6.xy = u_xlat10.xy + u_xlat9.xy;\n    u_xlat25.xy = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_5.xy = u_xlat5.xy;\n    u_xlat16_5.zw = u_xlat25.xy;\n    gl_Position = u_xlat3;\n    vs_COLOR0 = u_xlat16_8;\n    vs_COLOR1 = u_xlat16_4;\n    vs_TEXCOORD0 = u_xlat7;\n    vs_TEXCOORD1 = u_xlat16_1;\n    vs_TEXCOORD2 = u_xlat16_5;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nvec2 u_xlat1;\nmediump vec2 u_xlat16_1;\nvec2 u_xlat2;\nmediump vec2 u_xlat16_2;\nmediump float u_xlat16_3;\nfloat u_xlat4;\nvec2 u_xlat10;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat4 = vs_TEXCOORD1.x;\n    u_xlat0 = u_xlat4 * u_xlat10_0;\n    u_xlat16_0.x = u_xlat0;\n    u_xlat16_1.x = (-vs_TEXCOORD1.w);\n    u_xlat16_1.x = u_xlat16_0.x + u_xlat16_1.x;\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat16_1.x = min(u_xlat16_1.x, 1.0);\n    u_xlat16_0 = u_xlat16_1.xxxx * vs_COLOR0;\n    u_xlat2.xy = (-_ClipRect.xy);\n    u_xlat2.xy = u_xlat2.xy + _ClipRect.zw;\n    u_xlat16_1.xy = (-vs_TEXCOORD2.xy);\n    u_xlat16_1.xy = max(u_xlat16_1.xy, vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat16_1.xy;\n    u_xlat10.xy = (-u_xlat1.xy);\n    u_xlat2.xy = u_xlat10.xy + u_xlat2.xy;\n    u_xlat10.xy = vs_TEXCOORD2.zw;\n    u_xlat2.xy = u_xlat10.xy * u_xlat2.xy;\n    u_xlat2.xy = max(u_xlat2.xy, vec2(0.0, 0.0));\n    u_xlat2.xy = min(u_xlat2.xy, vec2(1.0, 1.0));\n    u_xlat16_2.xy = u_xlat2.xy;\n    u_xlat16_3 = u_xlat16_2.y * u_xlat16_2.x;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_3);\n    SV_Target0 = u_xlat16_0;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec4 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nfloat u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec4 u_xlat6;\nmediump vec3 u_xlat16_6;\nvec4 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec2 u_xlat8;\nmediump vec4 u_xlat16_8;\nvec2 u_xlat9;\nmediump vec2 u_xlat16_9;\nvec2 u_xlat10;\nfloat u_xlat11;\nfloat u_xlat12;\nvec2 u_xlat21;\nbool u_xlatb21;\nvec2 u_xlat22;\nmediump vec2 u_xlat16_22;\nvec2 u_xlat25;\nvec2 u_xlat26;\nvec2 u_xlat27;\nvec2 u_xlat28;\nfloat u_xlat30;\nfloat u_xlat31;\nfloat u_xlat32;\nfloat u_xlat34;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0 = float(0);\n    u_xlatb0 = u_xlat0>=in_TEXCOORD0.w;\n    u_xlat0 = (u_xlatb0) ? 1.0 : 0.0;\n    u_xlat1 = in_POSITION0.zwxy;\n    u_xlat2.x = u_xlat1.z + _VertexOffsetX;\n    u_xlat12 = u_xlat1.w + _VertexOffsetY;\n    u_xlat2.x = u_xlat2.x;\n    u_xlat2.y = u_xlat12;\n    u_xlat2.z = u_xlat1.x;\n    u_xlat2.xyz = u_xlat2.xyz;\n    u_xlat3 = u_xlat2.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[0];\n    u_xlat4 = u_xlat2.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat2.zzzz * hlslcc_mtx4x4unity_ObjectToWorld[2];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = hlslcc_mtx4x4unity_ObjectToWorld[3] * vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat4 = u_xlat3.xxxx * hlslcc_mtx4x4unity_MatrixVP[0];\n    u_xlat5 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat5 = u_xlat3.zzzz * hlslcc_mtx4x4unity_MatrixVP[2];\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat3 = u_xlat3.wwww * hlslcc_mtx4x4unity_MatrixVP[3];\n    u_xlat3 = u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3;\n    u_xlat3 = u_xlat3;\n    u_xlat10.xy = u_xlat3.ww;\n    u_xlat21.xy = _ScreenParams.xx * hlslcc_mtx4x4glstate_matrix_projection[0].xy;\n    u_xlat22.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat21.xy = u_xlat21.xy + u_xlat22.xy;\n    u_xlat22.xy = (-u_xlat21.xy);\n    u_xlat21.xy = max(u_xlat21.xy, u_xlat22.xy);\n    u_xlat21.xy = u_xlat21.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat10.xy = u_xlat10.xy / u_xlat21.xy;\n    u_xlat30 = dot(u_xlat10.xy, u_xlat10.xy);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat21.x = (-in_TEXCOORD0.w);\n    u_xlat21.x = max(u_xlat21.x, in_TEXCOORD0.w);\n    u_xlat21.x = u_xlat21.x * _GradientScale;\n    u_xlat31 = float(1);\n    u_xlat31 = u_xlat31 + _Sharpness;\n    u_xlat21.x = u_xlat31 * u_xlat21.x;\n    u_xlat30 = u_xlat30 * u_xlat21.x;\n    u_xlat21.x = float(0);\n    u_xlatb21 = u_xlat21.x==hlslcc_mtx4x4glstate_matrix_projection[3].w;\n    if(u_xlatb21){\n        u_xlat21.x = (-u_xlat30);\n        u_xlat21.x = max(u_xlat30, u_xlat21.x);\n        u_xlat31 = float(1);\n        u_xlat22.x = (-_PerspectiveFilter);\n        u_xlat31 = u_xlat31 + u_xlat22.x;\n        u_xlat21.x = u_xlat31 * u_xlat21.x;\n        u_xlat4.xyz = in_NORMAL0.xyz;\n        u_xlat5.x = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n        u_xlat5.y = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n        u_xlat5.z = dot(u_xlat4.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n        u_xlat31 = dot(u_xlat5.xyz, u_xlat5.xyz);\n        u_xlat31 = inversesqrt(u_xlat31);\n        u_xlat4.xyz = vec3(u_xlat31) * u_xlat5.xyz;\n        u_xlat2.x = u_xlat2.x;\n        u_xlat2.y = u_xlat2.y;\n        u_xlat1.xy = u_xlat1.xy;\n        u_xlat5.xyz = u_xlat2.xxx * hlslcc_mtx4x4unity_ObjectToWorld[0].xyz;\n        u_xlat6.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat6.xyz = u_xlat1.xxx * hlslcc_mtx4x4unity_ObjectToWorld[2].xyz;\n        u_xlat5.xyz = u_xlat5.xyz + u_xlat6.xyz;\n        u_xlat1.xyw = u_xlat1.yyy * hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;\n        u_xlat1.xyw = u_xlat1.xyw + u_xlat5.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat1.xyw = (-u_xlat1.xyw);\n        u_xlat1.xyw = u_xlat1.xyw + _WorldSpaceCameraPos.xyz;\n        u_xlat1.xyw = u_xlat1.xyw;\n        u_xlat22.x = dot(u_xlat1.xyw, u_xlat1.xyw);\n        u_xlat22.x = inversesqrt(u_xlat22.x);\n        u_xlat1.xyw = u_xlat1.xyw * u_xlat22.xxx;\n        u_xlat1.x = dot(u_xlat4.xyz, u_xlat1.xyw);\n        u_xlat11 = (-u_xlat1.x);\n        u_xlat1.x = max(u_xlat11, u_xlat1.x);\n        u_xlat11 = (-u_xlat21.x);\n        u_xlat11 = u_xlat30 + u_xlat11;\n        u_xlat1.x = u_xlat11 * u_xlat1.x;\n        u_xlat30 = u_xlat1.x + u_xlat21.x;\n    }\n    u_xlat1.x = (-_WeightNormal);\n    u_xlat1.x = u_xlat1.x + _WeightBold;\n    u_xlat0 = u_xlat0 * u_xlat1.x;\n    u_xlat0 = u_xlat0 + _WeightNormal;\n    u_xlat0 = u_xlat0 / 4.0;\n    u_xlat0 = u_xlat0 + _FaceDilate;\n    u_xlat0 = u_xlat0 * _ScaleRatioA;\n    u_xlat0 = u_xlat0 * 0.5;\n    u_xlat1.x = float(1);\n    u_xlat11 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat11 = u_xlat30 * u_xlat11;\n    u_xlat1.x = u_xlat11 + u_xlat1.x;\n    u_xlat1.x = u_xlat30 / u_xlat1.x;\n    u_xlat22.x = (-u_xlat0);\n    u_xlat22.x = u_xlat22.x + 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat32 = -0.5;\n    u_xlat31 = u_xlat32 + u_xlat22.x;\n    u_xlat22.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat22.x = u_xlat22.x * 0.5;\n    u_xlat22.x = u_xlat1.x * u_xlat22.x;\n    u_xlat34 = in_COLOR0.w;\n    u_xlat16_4.w = u_xlat34;\n    u_xlat16_4.xyz = in_COLOR0.xyz;\n    u_xlat16_5 = u_xlat16_4 * _FaceColor;\n    u_xlat16_6.xyz = u_xlat16_5.www * u_xlat16_5.xyz;\n    u_xlat16_7 = _OutlineColor;\n    u_xlat32 = u_xlat16_7.w;\n    u_xlat34 = u_xlat16_4.w * u_xlat32;\n    u_xlat16_34 = u_xlat34;\n    u_xlat16_4.xyz = vec3(u_xlat16_34) * u_xlat16_7.xyz;\n    u_xlat6.xyz = u_xlat16_6.xyz;\n    u_xlat6.w = u_xlat16_5.w;\n    u_xlat4.xyz = u_xlat16_4.xyz;\n    u_xlat4.w = u_xlat16_34;\n    u_xlat32 = float(2);\n    u_xlat32 = u_xlat32 * u_xlat22.x;\n    u_xlat32 = min(u_xlat32, 1.0);\n    u_xlat32 = sqrt(u_xlat32);\n    u_xlat5 = (-u_xlat6);\n    u_xlat4 = u_xlat4 + u_xlat5;\n    u_xlat4 = vec4(u_xlat32) * u_xlat4;\n    u_xlat4 = u_xlat4 + u_xlat6;\n    u_xlat16_4 = u_xlat4;\n    u_xlat5 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat5 = min(u_xlat5, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat8.xy = (-u_xlat5.xy);\n    u_xlat8.xy = u_xlat2.xy + u_xlat8.xy;\n    u_xlat28.xy = (-u_xlat5.xy);\n    u_xlat28.xy = u_xlat5.zw + u_xlat28.xy;\n    u_xlat27.xy = u_xlat8.xy / u_xlat28.xy;\n    u_xlat3 = u_xlat3;\n    u_xlat16_8.xyz = u_xlat6.xyz;\n    u_xlat16_8.w = u_xlat6.w;\n    u_xlat16_4 = u_xlat16_4;\n    u_xlat7.xy = in_TEXCOORD0.xy;\n    u_xlat7.zw = u_xlat27.xy;\n    u_xlat32 = (-u_xlat22.x);\n    u_xlat11 = u_xlat31 + u_xlat32;\n    u_xlat21.x = u_xlat31 + u_xlat22.x;\n    u_xlat16_1.x = u_xlat1.x;\n    u_xlat16_1.y = u_xlat11;\n    u_xlat16_1.z = u_xlat21.x;\n    u_xlat16_1.w = u_xlat31;\n    u_xlat22.x = max(_MaskSoftnessX, _UIMaskSoftnessX);\n    u_xlat32 = max(_MaskSoftnessY, _UIMaskSoftnessY);\n    u_xlat16_22.x = u_xlat22.x;\n    u_xlat16_22.y = u_xlat32;\n    u_xlat6.xy = vec2(ivec2(2, 2));\n    u_xlat6.xy = u_xlat2.xy * u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.xy);\n    u_xlat6.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat26.xy = (-u_xlat5.zw);\n    u_xlat5.xy = u_xlat26.xy + u_xlat6.xy;\n    u_xlat16_9.x = float(0.25);\n    u_xlat16_9.y = float(0.25);\n    u_xlat16_9.xy = u_xlat16_22.xy * u_xlat16_9.xy;\n    u_xlat9.xy = u_xlat16_9.xy;\n    u_xlat6.xy = u_xlat10.xy + u_xlat9.xy;\n    u_xlat25.xy = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_5.xy = u_xlat5.xy;\n    u_xlat16_5.zw = u_xlat25.xy;\n    gl_Position = u_xlat3;\n    vs_COLOR0 = u_xlat16_8;\n    vs_COLOR1 = u_xlat16_4;\n    vs_TEXCOORD0 = u_xlat7;\n    vs_TEXCOORD1 = u_xlat16_1;\n    vs_TEXCOORD2 = u_xlat16_5;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nvec2 u_xlat1;\nmediump vec2 u_xlat16_1;\nvec2 u_xlat2;\nmediump vec2 u_xlat16_2;\nfloat u_xlat3;\nmediump float u_xlat16_3;\nint u_xlati4;\nbool u_xlatb4;\nfloat u_xlat5;\nvec2 u_xlat12;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = vs_TEXCOORD1.x;\n    u_xlat0 = u_xlat5 * u_xlat10_0;\n    u_xlat16_0.x = u_xlat0;\n    u_xlat16_1.x = (-vs_TEXCOORD1.w);\n    u_xlat16_1.x = u_xlat16_0.x + u_xlat16_1.x;\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat16_1.x = min(u_xlat16_1.x, 1.0);\n    u_xlat16_0 = u_xlat16_1.xxxx * vs_COLOR0;\n    u_xlat2.xy = (-_ClipRect.xy);\n    u_xlat2.xy = u_xlat2.xy + _ClipRect.zw;\n    u_xlat16_1.xy = (-vs_TEXCOORD2.xy);\n    u_xlat16_1.xy = max(u_xlat16_1.xy, vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat16_1.xy;\n    u_xlat12.xy = (-u_xlat1.xy);\n    u_xlat2.xy = u_xlat12.xy + u_xlat2.xy;\n    u_xlat12.xy = vs_TEXCOORD2.zw;\n    u_xlat2.xy = u_xlat12.xy * u_xlat2.xy;\n    u_xlat2.xy = max(u_xlat2.xy, vec2(0.0, 0.0));\n    u_xlat2.xy = min(u_xlat2.xy, vec2(1.0, 1.0));\n    u_xlat16_2.xy = u_xlat2.xy;\n    u_xlat16_3 = u_xlat16_2.y * u_xlat16_2.x;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_3);\n    u_xlat16_3 = 0.00100000005;\n    u_xlat16_3 = (-u_xlat16_3);\n    u_xlat16_3 = u_xlat16_0.w + u_xlat16_3;\n    u_xlat3 = u_xlat16_3;\n    u_xlatb4 = u_xlat3<0.0;\n    u_xlati4 = u_xlatb4 ? -1 : int(0);\n    if((u_xlati4)!=0){discard;}\n    SV_Target0 = u_xlat16_0;\n    return;\n}\n\n"]